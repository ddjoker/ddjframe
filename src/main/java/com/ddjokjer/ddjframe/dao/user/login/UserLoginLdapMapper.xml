<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ddjokjer.ddjframe.dao.user.login.UserLoginLdapMapper">
  <resultMap id="BaseResultMap" type="com.ddjokjer.ddjframe.model.user.login.UserLoginLdap">
    <id column="usr_guid" jdbcType="VARCHAR" property="usrGuid" />
    <result column="base" jdbcType="VARCHAR" property="base" />
    <result column="cn" jdbcType="VARCHAR" property="cn" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
    <result column="created_dt" jdbcType="TIMESTAMP" property="createdDt" />
    <result column="record_flag" jdbcType="VARCHAR" property="recordFlag" />
    <result column="updated_by" jdbcType="VARCHAR" property="updatedBy" />
    <result column="updated_dt" jdbcType="TIMESTAMP" property="updatedDt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    usr_guid, base, cn, status, created_by, created_dt, record_flag, updated_by, updated_dt
  </sql>
  <select id="selectByExample" parameterType="com.ddjokjer.ddjframe.model.user.login.UserLoginLdapExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_login_ldap
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_login_ldap
    where usr_guid = #{usrGuid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user_login_ldap
    where usr_guid = #{usrGuid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.ddjokjer.ddjframe.model.user.login.UserLoginLdapExample">
    delete from user_login_ldap
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ddjokjer.ddjframe.model.user.login.UserLoginLdap">
    insert into user_login_ldap (usr_guid, base, cn, 
      status, created_by, created_dt, 
      record_flag, updated_by, updated_dt
      )
    values (#{usrGuid,jdbcType=VARCHAR}, #{base,jdbcType=VARCHAR}, #{cn,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR}, #{createdBy,jdbcType=VARCHAR}, #{createdDt,jdbcType=TIMESTAMP}, 
      #{recordFlag,jdbcType=VARCHAR}, #{updatedBy,jdbcType=VARCHAR}, #{updatedDt,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ddjokjer.ddjframe.model.user.login.UserLoginLdap">
    insert into user_login_ldap
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="usrGuid != null">
        usr_guid,
      </if>
      <if test="base != null">
        base,
      </if>
      <if test="cn != null">
        cn,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="createdDt != null">
        created_dt,
      </if>
      <if test="recordFlag != null">
        record_flag,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="updatedDt != null">
        updated_dt,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="usrGuid != null">
        #{usrGuid,jdbcType=VARCHAR},
      </if>
      <if test="base != null">
        #{base,jdbcType=VARCHAR},
      </if>
      <if test="cn != null">
        #{cn,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdDt != null">
        #{createdDt,jdbcType=TIMESTAMP},
      </if>
      <if test="recordFlag != null">
        #{recordFlag,jdbcType=VARCHAR},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedDt != null">
        #{updatedDt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ddjokjer.ddjframe.model.user.login.UserLoginLdapExample" resultType="java.lang.Long">
    select count(*) from user_login_ldap
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_login_ldap
    <set>
      <if test="record.usrGuid != null">
        usr_guid = #{record.usrGuid,jdbcType=VARCHAR},
      </if>
      <if test="record.base != null">
        base = #{record.base,jdbcType=VARCHAR},
      </if>
      <if test="record.cn != null">
        cn = #{record.cn,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.createdBy != null">
        created_by = #{record.createdBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createdDt != null">
        created_dt = #{record.createdDt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.recordFlag != null">
        record_flag = #{record.recordFlag,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedBy != null">
        updated_by = #{record.updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedDt != null">
        updated_dt = #{record.updatedDt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_login_ldap
    set usr_guid = #{record.usrGuid,jdbcType=VARCHAR},
      base = #{record.base,jdbcType=VARCHAR},
      cn = #{record.cn,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      created_by = #{record.createdBy,jdbcType=VARCHAR},
      created_dt = #{record.createdDt,jdbcType=TIMESTAMP},
      record_flag = #{record.recordFlag,jdbcType=VARCHAR},
      updated_by = #{record.updatedBy,jdbcType=VARCHAR},
      updated_dt = #{record.updatedDt,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ddjokjer.ddjframe.model.user.login.UserLoginLdap">
    update user_login_ldap
    <set>
      <if test="base != null">
        base = #{base,jdbcType=VARCHAR},
      </if>
      <if test="cn != null">
        cn = #{cn,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdDt != null">
        created_dt = #{createdDt,jdbcType=TIMESTAMP},
      </if>
      <if test="recordFlag != null">
        record_flag = #{recordFlag,jdbcType=VARCHAR},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedDt != null">
        updated_dt = #{updatedDt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where usr_guid = #{usrGuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ddjokjer.ddjframe.model.user.login.UserLoginLdap">
    update user_login_ldap
    set base = #{base,jdbcType=VARCHAR},
      cn = #{cn,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      created_by = #{createdBy,jdbcType=VARCHAR},
      created_dt = #{createdDt,jdbcType=TIMESTAMP},
      record_flag = #{recordFlag,jdbcType=VARCHAR},
      updated_by = #{updatedBy,jdbcType=VARCHAR},
      updated_dt = #{updatedDt,jdbcType=TIMESTAMP}
    where usr_guid = #{usrGuid,jdbcType=VARCHAR}
  </update>
</mapper>